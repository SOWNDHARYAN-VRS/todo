package com.example.todo.controller;
import com.example.todo.model.Task;
import com.example.todo.service.TaskService;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.web.bind.annotation.*;

@RestController // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class TaskController {
//    @Autowired // This means to get the bean called userRepository
//    // Which is auto-generated by Spring, we will use it to handle the data
//    private UserRepository userRepository;
    @Autowired
    private TaskService taskService;
    public TaskController(TaskService taskService) {
        this.taskService = taskService;
    }

    @PostMapping(path="/add") // Map ONLY POST Requests
//    public Task addNewTask (@RequestParam int id,@RequestParam String todo
//            , @RequestParam String completionDate,@RequestParam Boolean done)
    public Task addNewTask (@RequestBody Task task){
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

//        Task n = new Task();
//        n.setTodo(todo);
//        n.setId(id) ;
//        n.setCompletionDate(completionDate);
//        n.setDone(done);
        //Task savedTask=
        taskService.addNewTask(task);
        return task;
    }

//    @GetMapping(path="/all")
//    public @ResponseBody Iterable<Task> getAllTask() {
//        // This returns a JSON or XML with the users
//        return userRepository.findAll();
//
//    }
//    @RequestMapping("/delete")
//    public @ResponseBody String deleteById(@RequestParam int id){
//        userRepository.deleteById(id);
//        return "deleted";
//    }

}